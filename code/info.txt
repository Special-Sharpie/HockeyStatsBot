Welcome and thank you for adding HockeyBot to your discord server! HockeyBot is your one stop shop for all the hockey stats you want, on the fly! See below for list of working commands!
This page is your key to understanding every command as well as parameters that are required in order to retrieve (almost) live updating data from the NHL website!

Commands:
1.	?teamID – This is the most important command, as most of the team-based commands run of the IDs provided.

2.	?teamWL – When run, this command returns the current season Win/loss/OT record for the requested team, requiring 1 parameter, the team ID from “?teamID”. Example: ?teamWL 20.

3.	?lifeWL – This command returns the lifetime Win/Loss at home, on  the road, stats between two teams. This requires two parameters, the first team ID, and second team ID.

4.	?Pstats – This command returns the most relevant stats for each player. This takes two parameters, the name (Example: MathewTkachuk, notice the lack of space between the first and last name) which is required, and the season (Example: 20182019, same deal with the name) which is only required when requesting stats from previous seasons.

5.	In-depth player stats. This is a collection of commands with exactly same requirements as ?Pstats, only one stat is returned opposed to all.

    A.	 Goalies:
        a.	?Gwins – Returns total wins for the season.
        b.	?Gloss – Returns total losses for the season.
        c.	?Gotl – Return total overtime losses for the season.
        d.	?Gshutout – Returns total shutouts for the season.
        e.	?Gsaves – Returns total saves for the season.
        f.	?GSavep – Returns Save Percentage for the season.
        g.	?Ggaa – Returns Goals Against Average for the season.
        h.	?Ggoala – Returns total Goals Against for the season.
        i.	?Gshota – Returns total shots face for the season.
        j.	Ggames – Returns total games played for the season.
        k.	?Gtoi – Returns total time on ice for the season.
    B.	Skaters:
        a.	?Pgoals – Returns total goals for the season.
        b.	?Passists – Returns total assists for the season.
        c.	?Ppoints – Returns total points for the season.
        d.	?Pgplayed – Return total games played for the season.
        e.	?Pshots – Returns total shots taken during the season.
        f.	?Pppgoals – Returns total Power Play goals for the season.
        g.	?Ppppoints – Returns total Power Play points for the season.
        h.	?Potgoals – Returns total Overtime goals for the season.
        i.	?Pshgoals – Returns total Short Handed goals for the season.
        j.	?Pgwgoals – Returns total Game Winning goals for the season.
        k.	?Pplusminus – Returns the players Plus/Minus rating for the season.
        l.	?Phits – Returns total Hits of the season.
        m.	?Pbshots – Returns total Blocked Shots for the season.
        n.	?Ppenalty – Returns total Penalty Minutes for the season.
        o.	?Ptoi – Returns total Time On Ice for the season.

6.	?Gnext – This command returns the next game date for the requested team, checking the next 10 days from the date the command was run. It only requires one parameter, a team ID. It returns the date/time in the Mountain Standard time. (I am from Calgary and I have yet to find a way to get end user timezone through Discord, I am however still looking)

7.	?Glast – This command returns the last game date played by the requested team, checking the last day from the date the command was run. It only requires one parameter, a team ID.

8.	?Gtoday – This command returns some info about the game of that current day of the requested team. It will return the team which the requested team will be facing, as well as the score once the game has started. This command requires one parameter, a team ID.

9.	?divStandings – This command returns the current season’s, and only he current season’s, divisional standings. This requires one parameter, the division. The accepted format of the division name is as follows: METROPOLITAN: “Metro”, ATLANTIC: “Atl”, CENTRAL: “Cen”, PACIFIC: “Pac”.

10.	?confStandings – This command returns the current season’s, and only the current season’s, conference standings. This requires one parameter, the conference. The accepted format of the conference is as follows: EASTERN: “East”, WESTERN: “West”.

11.	?leagueStandings – This command returns the standings for the entire league, and can be run for any season in NHL history (The command will return the 19171918 season… pretty neat, huh?). This command has no required parameters, however, in order to get prior seasons standings, a season must be provided (Example: 20182019).

12.	?playoffStandings – This command returns the data of any requested playoff series, from any round, during any season. It will return the team matchup, as well as the record for the series, regardless of whether it is complete or not. This command requires three parameters, those being a team abbreviation, the round of the playoffs, and the season (Example: CGY R1 20182019). There are 5 different round codes that can be used, the first being the one and only exception as it only works for the 20192020 season, they are: “SCQ”, “R1”, “R2”, “CF”, “SCF”. The abbreviation that must be provided is the three-letter code assigned to every team (Example: CGY, TBL, ANA, MTL).

13.	?info – I’m sure you have figured this one out… This command gets you here.

Errors:

There are three main errors that will be raised by HockeyBot, and this section here will explain them and help the end user find there mistake.

1.	MissingRequiredArguments: This error is raised whenever a required parameter is missing from the command, the best solve for this is to verify you command with the commands in this document in-order to determine which parameter you are missing.

2.	CommandNotFound: This error is straight forward, what you have requested is not a command, this could be due to a typo in the command itself or just requesting a command that does not exist. Please note, if you have a command for a certain stat that is not listed, let me know and I will look into adding it!

3.	CommandInvokeError: This error is raised anytime there is an issue with the provided parameters, typically it is caused by a typo in one of the parameters, or more than the required amount was given. Best fix is to check what you requested for any spelling errors or typos and check this document to ensure you have the correct parameters.

If any errors persist, feel free to open a case on my GitHub (Once I create it), and I will investigate!
